import util from 'util'
import { writeFile } from 'fs'
import path from 'path'
import { execFile } from 'child_process'

import low from 'lowdb'
import FileSync from 'lowdb/adapters/FileSync'
import tp from 'timeproxy'
import Parser from 'rss-parser'
import RSS from 'rss'

pexecFile = util.promisify(execFile)
pwriteFile = util.promisify(writeFile)

ytChannelFeed = 'https://www.youtube.com/feeds/videos.xml?channel_id=UC3s0BtrBJpwNDaflRSoiieQ'
defaultYTdLparams = ['--restrict-filenames','-f bestaudio']
projectPath = path.resolve(__dirname, '..')
youtubedlBinaryPath = path.join(projectPath, 'youtube-dl-binary', `youtube-dl`)
dbPath = path.join(projectPath, 'db', 'db.json')
feedFilePath = path.join(projectPath, 'feed', 'feed.xml')

db = low(new FileSync(dbPath))
feedParser = new Parser()

db.defaults({ lastVideoPublishDate: 'Never'}).write()

getNewTWvideos() ->
  feedParser.parseURL(ytChannelFeed)
   .then(({items: videos}) ->
    twVideos = videos.filter(video -> video.title.toLowerCase().includes('threatwire'))
    if !twVideos.length: return
    if db.get('lastVideoPublishDate').value() === twVideos[0].pubDate: return twVideos

    db.set('lastVideoPublishDate', twVideos[0].pubDate).write()
    return pexecFile(youtubedlBinaryPath, [twVideos[0].link, ...defaultYTdLparams])
      .then(result -> console.log(result))
      .then(() -> twVideos)

   )
   .then(twVideos ->
      feed = new RSS({
        title: 'ThreatWire',
        image_url: 'https://www.hak5.org/wp-content/uploads/2016/04/logo_black_small.png',
      })
      twVideos.forEach(video => {
        feed.item({
          title: video.title,
          guid: video.id,
          url: video.link,
          date: video.isoDate,
        })
      })
      feed.xml()
   )
   .then(feed -> pwriteFile(feedFilePath, feed))
   .catch(e -> console.error(e))

setInterval(getNewTWvideos, tp.ONE_DAY)
getNewTWvideos()
