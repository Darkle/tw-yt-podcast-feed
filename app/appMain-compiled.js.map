{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/appMain.lsc","webpack:///external \"@oigroup/lightscript-runtime/isMatch\"","webpack:///external \"child_process\"","webpack:///external \"folktale/maybe\"","webpack:///external \"fs\"","webpack:///external \"lowdb\"","webpack:///external \"lowdb/adapters/FileSync\"","webpack:///external \"path\"","webpack:///external \"rss\"","webpack:///external \"rss-parser\"","webpack:///external \"timeproxy\"","webpack:///external \"util\""],"names":["util","promisify","execFile","writeFile","path","resolve","__dirname","join","projectPath","title","image_url","FileSync","dbPath","Parser","db","defaults","lastVideoPublishDate","write","parseURL","ytChannelFeed","then","getTWvideosFromFeed","downloadNewVideo","updateRSSfeed","catch","error","e","videos","items","filter","toLowerCase","includes","twVideos","length","get","value","pubDate","shouldDownloadVideo","Nothing","updateDBwithMostRecentDownload","mostRecentVideo","id","slice","youtubedlBinaryPath","link","saveFilePath","log","result","Just","set","RSS","defaultFeedProperties","getOrElse","forEach","item","video","guid","url","date","pwriteFile","feedFilePath","feed","xml","indent","setInterval","getNewTWvideos","tp","ONE_DAY"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;AClFA;;;;AAAA;;;;AACA;;AACA;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,gBAAYA,eAAKC,SAAL,CAAeC,uBAAf,CAAZ;AACA,iBAAaF,eAAKC,SAAL,CAAeE,aAAf,CAAb;;AAEA,oBAAgB,8EAAhB;AACA,kBAAcC,eAAKC,OAAL,CAAaC,SAAb,EAAwB,IAAxB,CAAd;AACA,0BAAsBF,eAAKG,IAAL,CAAUC,WAAV,EAAuB,mBAAvB,eAAtB;AACA,aAASJ,eAAKG,IAAL,CAAUC,WAAV,EAAuB,IAAvB,EAA6B,SAA7B,CAAT;AACA,mBAAeJ,eAAKG,IAAL,CAAUC,WAAV,EAAuB,MAAvB,EAA+B,UAA/B,CAAf;AACA,4BAAwB;AACtBC,SAAO,YADe;AAEtBC,aAAW;AAFW,CAAxB;;;AAcA,SAAK,qBAAI,IAAIC,kBAAJ,CAAaC,MAAb,CAAJ,CAAL;AACA,iBAAa,IAAIC,mBAAJ,EAAb;;AAEAC,GAAGC,QAAH,CAAY,EAAEC,sBAAsB,OAAxB,EAAZ,EAA8CC,KAA9C;;AAEA,0BAAiB;AACf,oBAAWC,QAAX,CAAoBC,aAApB,EACGC,IADH,CACQC,mBADR,EAEGD,IAFH,CAEQE,gBAFR,EAGGF,IAHH,CAGQG,aAHR,EAIGC,KAJH,CAIS,aAAK;AAAA,mBAAQC,KAAR,CAAcC,CAAd;AAAgB,GAJ9B;AAI+B,CAEjC,mCAAiE;AAAA,MAArCC,MAAqC,QAA5CC,KAA4C;;AAC/D,gBAAOC,MAAP,CAAc,iBAAS;AAAA,iBAAMpB,KAAN,CAAYqB,WAAZ,GAA0BC,QAA1B,CAAmC,YAAnC;AAAgD,GAAvE;AAAwE,CAE1E,6BAAoBC,QAApB,EAA+C;AAC7C,MAAG,IAAH,EAAU,OAAO,IAAP;AACV,kBAASC,MAAT,IAAmBnB,GAAGoB,GAAH,CAAO,sBAAP,EAA+BC,KAA/B,OAA2CH,SAAS,CAAT,EAAYI,OAA1E;AAAiF,CAEnF,0BAAiBJ,QAAjB,EAAoE;AAAI;AAEpE,MAAE,CAAEK,mBAAD,CADCL,QACD,CAAH,EAA2B;AAAA,2BAAMM,OAAN;AAAe,GAA1C,MACM;AACJ,0BAAkBN,SAAS,CAAT,CAAlB;AACAO,mCAA+BC,eAA/B;AACA,uBAAepC,eAAKG,IAAL,CAAU,YAAV,EAA4BiC,gBAAgBC,EAAhB,CAAmBC,KAAnB,CAAyB,CAAzB,CAA5B,WAAf;AACA,qBACEC,mBADF,EAEE,CACEH,gBAAgBI,IADlB,SAEQC,YAFR,EAGE,cAHF,CAFF,EAQGzB,IARH,CAQQ,kBAAU;AAAA,qBAAQ0B,GAAR,CAAYC,MAAZ;AAAmB,KARrC,EASG3B,IATH,CASQ,YAAM;AAAA,6BAAM4B,IAAN,CAAWhB,QAAX;AAAoB,KATlC;AASmC;AAAA,CAEzC,wCAA+BQ,eAA/B,EAAwD;AACtD,YAAGS,GAAH,CAAO,sBAAP,EAA+BT,gBAAgBJ,OAA/C,EAAwDnB,KAAxD;AAA+D,CAEjE,uBAAce,QAAd,EAAuC;AAAI;AAEvC,MAAEgB,oCADEhB,QACFgB,CAAF,EAAM;AACJ,eAAO,IAAIE,aAAJ,CAAQC,qBAAR,CAAP;AACAnB,aAASoB,SAAT,CAAmB,EAAnB,EAAuBC,OAAvB,CAA+B,iBAAM;AACnC,kBAAKC,IAAL,CAAU;AACR7C,eAAO8C,MAAM9C,KADL;AAER+C,cAAMD,MAAMd,EAFJ;AAGRgB,aAAKF,MAAMX,IAHH,EAGU;AAClBc,cAAMH,MAAMnB;AAJJ,OAAV;AAKE,KANJ;AAQAuB,eAAWC,YAAX,EAAyBC,KAAKC,GAAL,CAAS,EAACC,QAAQ,IAAT,EAAT,CAAzB;AACA,mBAAQjB,GAAR,CAAY,2BAAZ;AAAwC;AAAA,CAE9CkB,YAAYC,cAAZ,EAA4BC,oBAAGC,OAA/B;AACAF,iB;;;;;;;;;;;AC1FA,iE;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,oD;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,gC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,sC;;;;;;;;;;;ACAA,iC","file":"appMain-compiled.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/appMain.lsc\");\n","import util from 'util'\r\nimport { writeFile } from 'fs'\r\nimport path from 'path'\r\nimport { execFile } from 'child_process'\r\n\r\nimport low from 'lowdb'\r\nimport FileSync from 'lowdb/adapters/FileSync'\r\nimport tp from 'timeproxy'\r\nimport Parser from 'rss-parser'\r\nimport RSS from 'rss'\r\nimport Maybe, {Just, Nothing} from 'folktale/maybe'\r\n\r\npexecFile = util.promisify(execFile)\r\npwriteFile = util.promisify(writeFile)\r\n\r\nytChannelFeed = 'https://www.youtube.com/feeds/videos.xml?channel_id=UC3s0BtrBJpwNDaflRSoiieQ'\r\nprojectPath = path.resolve(__dirname, '..')\r\nyoutubedlBinaryPath = path.join(projectPath, 'youtube-dl-binary', `youtube-dl`)\r\ndbPath = path.join(projectPath, 'db', 'db.json')\r\nfeedFilePath = path.join(projectPath, 'feed', 'feed.xml')\r\ndefaultFeedProperties = {\r\n  title: 'ThreatWire',\r\n  image_url: 'https://www.hak5.org/wp-content/uploads/2016/04/logo_black_small.png',\r\n}\r\ntype TwVideos = Array<TwVideo>;\r\ntype TwVideo = {\r\n  title: string,\r\n  link: string,\r\n  pubDate: string,\r\n  author: string,\r\n  id: string,\r\n  isoDate: string\r\n};\r\n\r\ndb = low(new FileSync(dbPath))\r\nfeedParser = new Parser()\r\n\r\ndb.defaults({ lastVideoPublishDate: 'Never'}).write()\r\n\r\ngetNewTWvideos() ->\r\n  feedParser.parseURL(ytChannelFeed)\r\n    .then(getTWvideosFromFeed)\r\n    .then(downloadNewVideo)\r\n    .then(updateRSSfeed)\r\n    .catch(e -> console.error(e))\r\n\r\ngetTWvideosFromFeed({items: videos}:{videos: TwVideos}):TwVideos ->\r\n  videos.filter(video -> video.title.toLowerCase().includes('threatwire'))\r\n\r\nshouldDownloadVideo(twVideos:TwVideos):boolean ->\r\n  if ISDEV: return true\r\n  twVideos.length && db.get('lastVideoPublishDate').value() !== twVideos[0].pubDate\r\n\r\ndownloadNewVideo(twVideos:TwVideos):Nothing|Promise<Just<TwVideos>> ->  // eslint-disable-line fp/no-nil\r\n  match twVideos:\r\n    | !~shouldDownloadVideo(): Maybe.Nothing()\r\n    | else:\r\n      mostRecentVideo = twVideos[0]\r\n      updateDBwithMostRecentDownload(mostRecentVideo)\r\n      saveFilePath = path.join('audioFiles', `${ mostRecentVideo.id.slice(9) }.webm`)\r\n      pexecFile(\r\n        youtubedlBinaryPath,\r\n        [\r\n          mostRecentVideo.link,\r\n          `-o${ saveFilePath }`,\r\n          '-f bestaudio'\r\n        ]\r\n      )\r\n        .then(result -> console.log(result))\r\n        .then(() -> Maybe.Just(twVideos))\r\n\r\nupdateDBwithMostRecentDownload(mostRecentVideo:TwVideo) ->\r\n  db.set('lastVideoPublishDate', mostRecentVideo.pubDate).write()\r\n\r\nupdateRSSfeed(twVideos:Just<TwVideos>) ->  // eslint-disable-line fp/no-nil\r\n  match twVideos:\r\n    | Just:\r\n      feed = new RSS(defaultFeedProperties)\r\n      twVideos.getOrElse([]).forEach(video ->\r\n        feed.item({\r\n          title: video.title,\r\n          guid: video.id,\r\n          url: video.link,  //TODO:need to change this to be the url+folderPath of the site\r\n          date: video.pubDate,\r\n        })\r\n      )\r\n      pwriteFile(feedFilePath, feed.xml({indent: true}))\r\n      console.log('RSS Feed xml file updated')\r\n\r\nsetInterval(getNewTWvideos, tp.ONE_DAY)\r\ngetNewTWvideos()\r\n","module.exports = require(\"@oigroup/lightscript-runtime/isMatch\");","module.exports = require(\"child_process\");","module.exports = require(\"folktale/maybe\");","module.exports = require(\"fs\");","module.exports = require(\"lowdb\");","module.exports = require(\"lowdb/adapters/FileSync\");","module.exports = require(\"path\");","module.exports = require(\"rss\");","module.exports = require(\"rss-parser\");","module.exports = require(\"timeproxy\");","module.exports = require(\"util\");"],"sourceRoot":""}